name: Release Automation

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering with custom version input

permissions:
  contents: write  # Required for pushing tags and creating releases

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Read current version (if no input provided)
        id: read_version
        run: |
          if [ -z "${{ github.event.inputs.new_version }}" ]; then
            # Read current version from package.json
            CURRENT_VERSION=$(jq -r '.version' package.json)
            echo "Current version: $CURRENT_VERSION"
          else
            # If new version input is provided, use it
            CURRENT_VERSION="${{ github.event.inputs.new_version }}"
            echo "Custom version provided: $CURRENT_VERSION"
          fi
          echo "VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

      - name: Commit Version Update
        run: |
          git config --local user.name "GitHub Actions"
          git config --local user.email "actions@github.com"
          git add package.json
          git commit -m "chore: update version to v${{ env.VERSION }}"
          git push origin main

      - name: Create Git Tag
        run: |
          git tag v${{ env.VERSION }}
          git push origin v${{ env.VERSION }}

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          body: |
            ## Automated Release
            - Version bumped to v${{ env.VERSION }}.
          draft: false
          prerelease: false
