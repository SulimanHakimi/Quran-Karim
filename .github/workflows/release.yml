name: Release Automation

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      new_version:
        description: "Set a custom version"
        required: false

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Read and Update Version
        id: update_version
        run: |
          if [ -z "${{ github.event.inputs.new_version }}" ]; then
            NEW_VERSION=$(jq -r '.version' package.json | awk -F. '{printf "%d.%d.%d", $1, $2, $3+1}')
          else
            NEW_VERSION="${{ github.event.inputs.new_version }}"
          fi
          echo "New version: $NEW_VERSION"
          jq ".version = \"$NEW_VERSION\"" package.json > temp.json && mv temp.json package.json
          echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Commit Version Update
        run: |
          git config --local user.name "GitHub Actions"
          git config --local user.email "actions@github.com"
          git add -A
          if git diff-index --quiet HEAD; then
            echo "No changes to commit."
          else
            git commit -m "chore: update version to v${{ env.VERSION }}"
            git push origin main
          fi

      - name: Create Git Tag
        run: |
          git tag v${{ env.VERSION }}
          git push origin v${{ env.VERSION }}

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          body: |
            ## Automated Release
            - Version bumped to v${{ env.VERSION }}.
          draft: false
          prerelease: false
